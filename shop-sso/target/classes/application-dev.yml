server:
  port: 9094                                # 项目访问端口，默认 8080
  servlet:                                 # 项目访问路径，默认 /
    context-path: /shop-sso

# Spring
spring:
  # 数据源
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shop?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    # 指定 druid 连接池以及 druid 连接池配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 1                       # 初始连接数
      max-active: 20                        # 最大连接数
      max-idle: 20                          # 最大空闲
      min-idle: 1                           # 最小空闲
      max-wait: 60000                       # 最长等待时间
  # redis 缓存
  redis:
    timeout: 10000                          # 连接超时时间
    host: 192.168.121.11                    # Redis服务器地址
    port: 6379                              # Redis服务器端口
    database: 0                             # 选择哪个库，默认0库
    lettuce:
      pool:
        max-active: 1024                    # 最大连接数，默认 8
        max-wait: 10000                     # 最大连接阻塞等待时间，单位毫秒，默认 -1
        max-idle: 200                       # 最大空闲连接，默认 8
        min-idle: 5                         # 最小空闲连接，默认 0

dubbo:
  application:
    # 应用名称
    name: provider
  registry:
    # 注册中心地址
    address: zookeeper://192.168.121.11:2181?backup=192.168.121.12:2181,192.168.121.13:2181
    # 超时时间，单位毫秒
    timeout: 6000
    # 元数据中心
  metadata-report:
    address: zookeeper://192.168.121.11:2181?backup=192.168.121.12:2181,192.168.121.13:2181
  protocol:
    #协议名称
    name: dubbo
    #协议端口
    port: 20881
  scan:
    #扫描包的位置
    base-packages: com.xxxx.sso.service

# MyBatis
mybatis:
  # 配置 MyBatis数据返回类型别名(默认别名是类名)
  type-aliases-package: com.xxxx.sso.pojo
  # 配置 MyBatis Mapper 映射文件
  mapper-locations: classpath:mapper/*.xml

# Mybatis SQL 打印(方法接口所在的包，不是 Mapper.xml 所在的包)
logging:
  level:
    com.xxxx.manager.mapper: debug

# Redis Key
#用户票据key
user.ticket: user:userTicket